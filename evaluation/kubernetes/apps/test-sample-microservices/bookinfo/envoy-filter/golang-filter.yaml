apiVersion: networking.istio.io/v1alpha3
kind: EnvoyFilter
metadata:
  name: golang-inbound
  namespace: bookinfo
spec:
  configPatches:
    - applyTo: NETWORK_FILTER
      match:
        context: SIDECAR_INBOUND
        listener:
          filterChain:
            filter:
              name: "envoy.filters.network.http_connection_manager"
      patch:
        operation: MERGE
        value:
          name: "envoy.filters.network.http_connection_manager"
          typed_config:
            "@type": "type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager"
            tracing:
              spawn_upstream_span: true
              provider:
                name: envoy.tracers.zipkin
                typed_config:
                  "@type": type.googleapis.com/envoy.config.trace.v3.ZipkinConfig
                  # is it a stable identifier generated by istio?
                  collector_cluster: outbound|9411||jaeger-collector.prose-system.svc.cluster.local
                  collector_hostname: jaeger-collector.prose-system.svc.cluster.local
                  collector_endpoint: "/api/v2/spans"
                  collector_endpoint_version: HTTP_JSON
                  trace_id_128bit: true
                  shared_span_context: true
                  split_spans_for_request: true
    - applyTo: HTTP_FILTER
      match:
        context: SIDECAR_INBOUND
        listener:
          portNumber: 9080
          filterChain:
            filter:
              name: "envoy.filters.network.http_connection_manager"
              subFilter:
                name: "envoy.filters.http.router"
      patch:
        operation: INSERT_BEFORE
        value:
          name: golangfilter-inbound
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.filters.http.golang.v3alpha.Config
            library_id: simple
            library_path: "/etc/envoy/simple.so"
            plugin_name: simple
            plugin_config:
              "@type": type.googleapis.com/xds.type.v3.TypedStruct
              value:
                presidio_url: http://presidio.prose-system.svc.cluster.local:3000/batchanalyze
                zipkin_url: http://zipkin.prose-system.svc.cluster.local:9411/api/v2/spans
                opa_enable: false
                opa_config: |
                  services:
                    bundle_server:
                      url:  http://prose-server.prose-system.svc.cluster.local:8080
                  bundle_server:
                    default:
                      resource: /bundle.tar.gz
                      polling:
                        min_delay_seconds: 120
                        max_delay_seconds: 3600
                  decision_logs:
                    console: true
---
apiVersion: networking.istio.io/v1alpha3
kind: EnvoyFilter
metadata:
  name: golang-outbound
  namespace: istio-system
spec:
  configPatches:
    - applyTo: NETWORK_FILTER
      match:
        context: SIDECAR_OUTBOUND
        listener:
          filterChain:
            filter:
              name: "envoy.filters.network.http_connection_manager"
      patch:
        operation: MERGE
        value:
          name: "envoy.filters.network.http_connection_manager"
          typed_config:
            "@type": "type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager"
            tracing:
              spawn_upstream_span: true
              provider:
                name: envoy.tracers.zipkin
                typed_config:
                  "@type": type.googleapis.com/envoy.config.trace.v3.ZipkinConfig
                  # is it a stable identifier generated by istio?
                  collector_cluster: outbound|9411||jaeger-collector.prose-system.svc.cluster.local
                  collector_hostname: jaeger-collector.prose-system.svc.cluster.local
                  collector_endpoint: "/api/v2/spans"
                  collector_endpoint_version: HTTP_JSON
                  trace_id_128bit: true
                  shared_span_context: true
                  split_spans_for_request: true
    - applyTo: HTTP_FILTER
      match:
        context: SIDECAR_OUTBOUND
        listener:
          filterChain:
            filter:
              name: "envoy.filters.network.http_connection_manager"
              subFilter:
                name: "envoy.filters.http.router"
      patch:
        operation: INSERT_BEFORE
        value:
          name: golangfilter-outbound
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.filters.http.golang.v3alpha.Config
            library_id: simple
            library_path: "/etc/envoy/simple.so"
            plugin_name: simple
            plugin_config:
              "@type": type.googleapis.com/xds.type.v3.TypedStruct
              value:
                presidio_url: http://presidio.prose-system.svc.cluster.local:3000/batchanalyze
                zipkin_url: http://zipkin.prose-system.svc.cluster.local:9411/api/v2/spans
                opa_enable: false
                opa_config: |
                  services:
                    bundle_server:
                      url:  http://prose-server.prose-system.svc.cluster.local:8080
                  bundle_server:
                    default:
                      resource: /bundle.tar.gz
                      polling:
                        min_delay_seconds: 120
                        max_delay_seconds: 3600
                  decision_logs:
                    console: true

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.24.2
// source: privacy_profiles.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Map keys can't be enums so we used strings for purposes and PII types.
type PIIType int32

const (
	PIIType_CREDIT_CARD       PIIType = 0
	PIIType_NRP               PIIType = 1
	PIIType_US_ITIN           PIIType = 2
	PIIType_PERSON            PIIType = 3
	PIIType_US_BANK_NUMBER    PIIType = 4
	PIIType_US_PASSPORT       PIIType = 5
	PIIType_IP_ADDRESS        PIIType = 6
	PIIType_US_DRIVER_LICENSE PIIType = 7
	PIIType_CRYPTO            PIIType = 8
	PIIType_URL               PIIType = 9
	PIIType_PHONE_NUMBER      PIIType = 10
	PIIType_IBAN_CODE         PIIType = 11
	PIIType_DATE_TIME         PIIType = 12
	PIIType_LOCATION          PIIType = 13
	PIIType_EMAIL_ADDRESS     PIIType = 14
	PIIType_US_SSN            PIIType = 15
)

// Enum value maps for PIIType.
var (
	PIIType_name = map[int32]string{
		0:  "CREDIT_CARD",
		1:  "NRP",
		2:  "US_ITIN",
		3:  "PERSON",
		4:  "US_BANK_NUMBER",
		5:  "US_PASSPORT",
		6:  "IP_ADDRESS",
		7:  "US_DRIVER_LICENSE",
		8:  "CRYPTO",
		9:  "URL",
		10: "PHONE_NUMBER",
		11: "IBAN_CODE",
		12: "DATE_TIME",
		13: "LOCATION",
		14: "EMAIL_ADDRESS",
		15: "US_SSN",
	}
	PIIType_value = map[string]int32{
		"CREDIT_CARD":       0,
		"NRP":               1,
		"US_ITIN":           2,
		"PERSON":            3,
		"US_BANK_NUMBER":    4,
		"US_PASSPORT":       5,
		"IP_ADDRESS":        6,
		"US_DRIVER_LICENSE": 7,
		"CRYPTO":            8,
		"URL":               9,
		"PHONE_NUMBER":      10,
		"IBAN_CODE":         11,
		"DATE_TIME":         12,
		"LOCATION":          13,
		"EMAIL_ADDRESS":     14,
		"US_SSN":            15,
	}
)

func (x PIIType) Enum() *PIIType {
	p := new(PIIType)
	*p = x
	return p
}

func (x PIIType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PIIType) Descriptor() protoreflect.EnumDescriptor {
	return file_privacy_profiles_proto_enumTypes[0].Descriptor()
}

func (PIIType) Type() protoreflect.EnumType {
	return &file_privacy_profiles_proto_enumTypes[0]
}

func (x PIIType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PIIType.Descriptor instead.
func (PIIType) EnumDescriptor() ([]byte, []int) {
	return file_privacy_profiles_proto_rawDescGZIP(), []int{0}
}

type PurposeOfUse int32

const (
	PurposeOfUse_advertising    PurposeOfUse = 0
	PurposeOfUse_authentication PurposeOfUse = 1
	PurposeOfUse_shipping       PurposeOfUse = 2
	PurposeOfUse_payment        PurposeOfUse = 3
	PurposeOfUse_marketing      PurposeOfUse = 4
)

// Enum value maps for PurposeOfUse.
var (
	PurposeOfUse_name = map[int32]string{
		0: "advertising",
		1: "authentication",
		2: "shipping",
		3: "payment",
		4: "marketing",
	}
	PurposeOfUse_value = map[string]int32{
		"advertising":    0,
		"authentication": 1,
		"shipping":       2,
		"payment":        3,
		"marketing":      4,
	}
)

func (x PurposeOfUse) Enum() *PurposeOfUse {
	p := new(PurposeOfUse)
	*p = x
	return p
}

func (x PurposeOfUse) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PurposeOfUse) Descriptor() protoreflect.EnumDescriptor {
	return file_privacy_profiles_proto_enumTypes[1].Descriptor()
}

func (PurposeOfUse) Type() protoreflect.EnumType {
	return &file_privacy_profiles_proto_enumTypes[1]
}

func (x PurposeOfUse) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PurposeOfUse.Descriptor instead.
func (PurposeOfUse) EnumDescriptor() ([]byte, []int) {
	return file_privacy_profiles_proto_rawDescGZIP(), []int{1}
}

type SystemwideObservedProfile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SystemwideProcessingEntries   *PurposeBasedProcessing `protobuf:"bytes,1,opt,name=systemwideProcessingEntries,proto3" json:"systemwideProcessingEntries,omitempty"`
	ComposedServicesInternalFQDNs []string                `protobuf:"bytes,2,rep,name=ComposedServicesInternalFQDNs,proto3" json:"ComposedServicesInternalFQDNs,omitempty"`
}

func (x *SystemwideObservedProfile) Reset() {
	*x = SystemwideObservedProfile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_privacy_profiles_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemwideObservedProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemwideObservedProfile) ProtoMessage() {}

func (x *SystemwideObservedProfile) ProtoReflect() protoreflect.Message {
	mi := &file_privacy_profiles_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemwideObservedProfile.ProtoReflect.Descriptor instead.
func (*SystemwideObservedProfile) Descriptor() ([]byte, []int) {
	return file_privacy_profiles_proto_rawDescGZIP(), []int{0}
}

func (x *SystemwideObservedProfile) GetSystemwideProcessingEntries() *PurposeBasedProcessing {
	if x != nil {
		return x.SystemwideProcessingEntries
	}
	return nil
}

func (x *SystemwideObservedProfile) GetComposedServicesInternalFQDNs() []string {
	if x != nil {
		return x.ComposedServicesInternalFQDNs
	}
	return nil
}

type SvcObservedProfile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SvcInternalFQDN string `protobuf:"bytes,1,opt,name=svcInternalFQDN,proto3" json:"svcInternalFQDN,omitempty"`
	// repeated map_api_path_to_processing api_path_to_processing = 7;
	ObservedProcessingEntries *PurposeBasedProcessing `protobuf:"bytes,2,opt,name=observedProcessingEntries,proto3" json:"observedProcessingEntries,omitempty"`
}

func (x *SvcObservedProfile) Reset() {
	*x = SvcObservedProfile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_privacy_profiles_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SvcObservedProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SvcObservedProfile) ProtoMessage() {}

func (x *SvcObservedProfile) ProtoReflect() protoreflect.Message {
	mi := &file_privacy_profiles_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SvcObservedProfile.ProtoReflect.Descriptor instead.
func (*SvcObservedProfile) Descriptor() ([]byte, []int) {
	return file_privacy_profiles_proto_rawDescGZIP(), []int{1}
}

func (x *SvcObservedProfile) GetSvcInternalFQDN() string {
	if x != nil {
		return x.SvcInternalFQDN
	}
	return ""
}

func (x *SvcObservedProfile) GetObservedProcessingEntries() *PurposeBasedProcessing {
	if x != nil {
		return x.ObservedProcessingEntries
	}
	return nil
}

type PurposeBasedProcessing struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProcessingEntries map[string]*DataItemAndThirdParties `protobuf:"bytes,1,rep,name=processingEntries,proto3" json:"processingEntries,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *PurposeBasedProcessing) Reset() {
	*x = PurposeBasedProcessing{}
	if protoimpl.UnsafeEnabled {
		mi := &file_privacy_profiles_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PurposeBasedProcessing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PurposeBasedProcessing) ProtoMessage() {}

func (x *PurposeBasedProcessing) ProtoReflect() protoreflect.Message {
	mi := &file_privacy_profiles_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PurposeBasedProcessing.ProtoReflect.Descriptor instead.
func (*PurposeBasedProcessing) Descriptor() ([]byte, []int) {
	return file_privacy_profiles_proto_rawDescGZIP(), []int{2}
}

func (x *PurposeBasedProcessing) GetProcessingEntries() map[string]*DataItemAndThirdParties {
	if x != nil {
		return x.ProcessingEntries
	}
	return nil
}

type DataItemAndThirdParties struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entry map[string]*ThirdParties `protobuf:"bytes,1,rep,name=entry,proto3" json:"entry,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *DataItemAndThirdParties) Reset() {
	*x = DataItemAndThirdParties{}
	if protoimpl.UnsafeEnabled {
		mi := &file_privacy_profiles_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataItemAndThirdParties) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataItemAndThirdParties) ProtoMessage() {}

func (x *DataItemAndThirdParties) ProtoReflect() protoreflect.Message {
	mi := &file_privacy_profiles_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataItemAndThirdParties.ProtoReflect.Descriptor instead.
func (*DataItemAndThirdParties) Descriptor() ([]byte, []int) {
	return file_privacy_profiles_proto_rawDescGZIP(), []int{3}
}

func (x *DataItemAndThirdParties) GetEntry() map[string]*ThirdParties {
	if x != nil {
		return x.Entry
	}
	return nil
}

type ThirdParties struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ThirdParty []string `protobuf:"bytes,1,rep,name=thirdParty,proto3" json:"thirdParty,omitempty"`
}

func (x *ThirdParties) Reset() {
	*x = ThirdParties{}
	if protoimpl.UnsafeEnabled {
		mi := &file_privacy_profiles_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ThirdParties) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThirdParties) ProtoMessage() {}

func (x *ThirdParties) ProtoReflect() protoreflect.Message {
	mi := &file_privacy_profiles_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThirdParties.ProtoReflect.Descriptor instead.
func (*ThirdParties) Descriptor() ([]byte, []int) {
	return file_privacy_profiles_proto_rawDescGZIP(), []int{4}
}

func (x *ThirdParties) GetThirdParty() []string {
	if x != nil {
		return x.ThirdParty
	}
	return nil
}

var File_privacy_profiles_proto protoreflect.FileDescriptor

var file_privacy_profiles_proto_rawDesc = []byte{
	0x0a, 0x16, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63,
	0x79, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xcd, 0x01, 0x0a, 0x19, 0x53, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x77, 0x69, 0x64, 0x65, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x6a, 0x0a, 0x1b, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x77,
	0x69, 0x64, 0x65, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x45, 0x6e, 0x74,
	0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x70, 0x72, 0x69,
	0x76, 0x61, 0x63, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2e, 0x70, 0x75,
	0x72, 0x70, 0x6f, 0x73, 0x65, 0x42, 0x61, 0x73, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x69, 0x6e, 0x67, 0x52, 0x1b, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x77, 0x69, 0x64, 0x65,
	0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65,
	0x73, 0x12, 0x44, 0x0a, 0x1d, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x65, 0x64, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x46, 0x51, 0x44,
	0x4e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x1d, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x73,
	0x65, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x46, 0x51, 0x44, 0x4e, 0x73, 0x22, 0xa6, 0x01, 0x0a, 0x12, 0x53, 0x76, 0x63, 0x4f,
	0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x28,
	0x0a, 0x0f, 0x73, 0x76, 0x63, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x46, 0x51, 0x44,
	0x4e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x76, 0x63, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x46, 0x51, 0x44, 0x4e, 0x12, 0x66, 0x0a, 0x19, 0x6f, 0x62, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x45, 0x6e,
	0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x70, 0x72,
	0x69, 0x76, 0x61, 0x63, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2e, 0x70,
	0x75, 0x72, 0x70, 0x6f, 0x73, 0x65, 0x42, 0x61, 0x73, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x69, 0x6e, 0x67, 0x52, 0x19, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x50,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73,
	0x22, 0xf8, 0x01, 0x0a, 0x16, 0x70, 0x75, 0x72, 0x70, 0x6f, 0x73, 0x65, 0x42, 0x61, 0x73, 0x65,
	0x64, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x12, 0x6d, 0x0a, 0x11, 0x70,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79,
	0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2e, 0x70, 0x75, 0x72, 0x70, 0x6f, 0x73,
	0x65, 0x42, 0x61, 0x73, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67,
	0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x69,
	0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x11, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x69, 0x6e, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x1a, 0x6f, 0x0a, 0x16, 0x50, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x3f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x5f,
	0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x49, 0x74, 0x65,
	0x6d, 0x41, 0x6e, 0x64, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x69, 0x65, 0x73,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xbf, 0x01, 0x0a, 0x17,
	0x64, 0x61, 0x74, 0x61, 0x49, 0x74, 0x65, 0x6d, 0x41, 0x6e, 0x64, 0x54, 0x68, 0x69, 0x72, 0x64,
	0x50, 0x61, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x4a, 0x0a, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79,
	0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x49, 0x74,
	0x65, 0x6d, 0x41, 0x6e, 0x64, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x69, 0x65,
	0x73, 0x2e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x65, 0x6e,
	0x74, 0x72, 0x79, 0x1a, 0x58, 0x0a, 0x0a, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x34, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x5f, 0x70, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x73, 0x2e, 0x74, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x69,
	0x65, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x2e, 0x0a,
	0x0c, 0x74, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x1e, 0x0a,
	0x0a, 0x74, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0a, 0x74, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x2a, 0xfb, 0x01,
	0x0a, 0x08, 0x50, 0x49, 0x49, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x43, 0x52,
	0x45, 0x44, 0x49, 0x54, 0x5f, 0x43, 0x41, 0x52, 0x44, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x4e,
	0x52, 0x50, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x53, 0x5f, 0x49, 0x54, 0x49, 0x4e, 0x10,
	0x02, 0x12, 0x0a, 0x0a, 0x06, 0x50, 0x45, 0x52, 0x53, 0x4f, 0x4e, 0x10, 0x03, 0x12, 0x12, 0x0a,
	0x0e, 0x55, 0x53, 0x5f, 0x42, 0x41, 0x4e, 0x4b, 0x5f, 0x4e, 0x55, 0x4d, 0x42, 0x45, 0x52, 0x10,
	0x04, 0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x53, 0x5f, 0x50, 0x41, 0x53, 0x53, 0x50, 0x4f, 0x52, 0x54,
	0x10, 0x05, 0x12, 0x0e, 0x0a, 0x0a, 0x49, 0x50, 0x5f, 0x41, 0x44, 0x44, 0x52, 0x45, 0x53, 0x53,
	0x10, 0x06, 0x12, 0x15, 0x0a, 0x11, 0x55, 0x53, 0x5f, 0x44, 0x52, 0x49, 0x56, 0x45, 0x52, 0x5f,
	0x4c, 0x49, 0x43, 0x45, 0x4e, 0x53, 0x45, 0x10, 0x07, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x52, 0x59,
	0x50, 0x54, 0x4f, 0x10, 0x08, 0x12, 0x07, 0x0a, 0x03, 0x55, 0x52, 0x4c, 0x10, 0x09, 0x12, 0x10,
	0x0a, 0x0c, 0x50, 0x48, 0x4f, 0x4e, 0x45, 0x5f, 0x4e, 0x55, 0x4d, 0x42, 0x45, 0x52, 0x10, 0x0a,
	0x12, 0x0d, 0x0a, 0x09, 0x49, 0x42, 0x41, 0x4e, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x10, 0x0b, 0x12,
	0x0d, 0x0a, 0x09, 0x44, 0x41, 0x54, 0x45, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x10, 0x0c, 0x12, 0x0c,
	0x0a, 0x08, 0x4c, 0x4f, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x0d, 0x12, 0x11, 0x0a, 0x0d,
	0x45, 0x4d, 0x41, 0x49, 0x4c, 0x5f, 0x41, 0x44, 0x44, 0x52, 0x45, 0x53, 0x53, 0x10, 0x0e, 0x12,
	0x0a, 0x0a, 0x06, 0x55, 0x53, 0x5f, 0x53, 0x53, 0x4e, 0x10, 0x0f, 0x2a, 0x5d, 0x0a, 0x0c, 0x50,
	0x75, 0x72, 0x70, 0x6f, 0x73, 0x65, 0x4f, 0x66, 0x55, 0x73, 0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x61,
	0x64, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x69, 0x6e, 0x67, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e,
	0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0x01,
	0x12, 0x0c, 0x0a, 0x08, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x10, 0x02, 0x12, 0x0b,
	0x0a, 0x07, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x10, 0x03, 0x12, 0x0d, 0x0a, 0x09, 0x6d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x10, 0x04, 0x32, 0xce, 0x01, 0x0a, 0x16, 0x50,
	0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x6d,
	0x70, 0x6f, 0x73, 0x65, 0x72, 0x12, 0x55, 0x0a, 0x13, 0x50, 0x6f, 0x73, 0x74, 0x4f, 0x62, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x24, 0x2e, 0x70,
	0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2e,
	0x53, 0x76, 0x63, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x5d, 0x0a, 0x14,
	0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x57, 0x69, 0x64, 0x65, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x2b, 0x2e, 0x70,
	0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2e,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x77, 0x69, 0x64, 0x65, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x64, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x22, 0x00, 0x42, 0x20, 0x5a, 0x1e, 0x70,
	0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2d, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2d, 0x63,
	0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x65, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_privacy_profiles_proto_rawDescOnce sync.Once
	file_privacy_profiles_proto_rawDescData = file_privacy_profiles_proto_rawDesc
)

func file_privacy_profiles_proto_rawDescGZIP() []byte {
	file_privacy_profiles_proto_rawDescOnce.Do(func() {
		file_privacy_profiles_proto_rawDescData = protoimpl.X.CompressGZIP(file_privacy_profiles_proto_rawDescData)
	})
	return file_privacy_profiles_proto_rawDescData
}

var file_privacy_profiles_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_privacy_profiles_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_privacy_profiles_proto_goTypes = []interface{}{
	(PIIType)(0),                      // 0: privacy_profiles.PII_type
	(PurposeOfUse)(0),                 // 1: privacy_profiles.PurposeOfUse
	(*SystemwideObservedProfile)(nil), // 2: privacy_profiles.SystemwideObservedProfile
	(*SvcObservedProfile)(nil),        // 3: privacy_profiles.SvcObservedProfile
	(*PurposeBasedProcessing)(nil),    // 4: privacy_profiles.purposeBasedProcessing
	(*DataItemAndThirdParties)(nil),   // 5: privacy_profiles.dataItemAndThirdParties
	(*ThirdParties)(nil),              // 6: privacy_profiles.thirdParties
	nil,                               // 7: privacy_profiles.purposeBasedProcessing.ProcessingEntriesEntry
	nil,                               // 8: privacy_profiles.dataItemAndThirdParties.EntryEntry
	(*emptypb.Empty)(nil),             // 9: google.protobuf.Empty
}
var file_privacy_profiles_proto_depIdxs = []int32{
	4, // 0: privacy_profiles.SystemwideObservedProfile.systemwideProcessingEntries:type_name -> privacy_profiles.purposeBasedProcessing
	4, // 1: privacy_profiles.SvcObservedProfile.observedProcessingEntries:type_name -> privacy_profiles.purposeBasedProcessing
	7, // 2: privacy_profiles.purposeBasedProcessing.processingEntries:type_name -> privacy_profiles.purposeBasedProcessing.ProcessingEntriesEntry
	8, // 3: privacy_profiles.dataItemAndThirdParties.entry:type_name -> privacy_profiles.dataItemAndThirdParties.EntryEntry
	5, // 4: privacy_profiles.purposeBasedProcessing.ProcessingEntriesEntry.value:type_name -> privacy_profiles.dataItemAndThirdParties
	6, // 5: privacy_profiles.dataItemAndThirdParties.EntryEntry.value:type_name -> privacy_profiles.thirdParties
	3, // 6: privacy_profiles.PrivacyProfileComposer.PostObservedProfile:input_type -> privacy_profiles.SvcObservedProfile
	9, // 7: privacy_profiles.PrivacyProfileComposer.GetSystemWideProfile:input_type -> google.protobuf.Empty
	9, // 8: privacy_profiles.PrivacyProfileComposer.PostObservedProfile:output_type -> google.protobuf.Empty
	2, // 9: privacy_profiles.PrivacyProfileComposer.GetSystemWideProfile:output_type -> privacy_profiles.SystemwideObservedProfile
	8, // [8:10] is the sub-list for method output_type
	6, // [6:8] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_privacy_profiles_proto_init() }
func file_privacy_profiles_proto_init() {
	if File_privacy_profiles_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_privacy_profiles_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemwideObservedProfile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_privacy_profiles_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SvcObservedProfile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_privacy_profiles_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PurposeBasedProcessing); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_privacy_profiles_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataItemAndThirdParties); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_privacy_profiles_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ThirdParties); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_privacy_profiles_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_privacy_profiles_proto_goTypes,
		DependencyIndexes: file_privacy_profiles_proto_depIdxs,
		EnumInfos:         file_privacy_profiles_proto_enumTypes,
		MessageInfos:      file_privacy_profiles_proto_msgTypes,
	}.Build()
	File_privacy_profiles_proto = out.File
	file_privacy_profiles_proto_rawDesc = nil
	file_privacy_profiles_proto_goTypes = nil
	file_privacy_profiles_proto_depIdxs = nil
}
